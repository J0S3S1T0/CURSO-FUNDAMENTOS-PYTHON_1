{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM7zdmOtDGKHC/I4bS1aBRl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/J0S3S1T0/CURSO-FUNDAMENTOS-PYTHON_1/blob/Rama_Solucion/Soluci%C3%B3n-Fundamentos-Python\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Apropiación [Ejercicios Cíclicos]\n",
        "1.   Leer un número y presentar la tabla de multiplicar de ese número entre 1 y 10. Utilizar el siguiente formato de ejemplo:\n",
        "1 x 1 = 1\n",
        "1 x 2 = 2\n",
        "1 x 3 = 3\n",
        "1 x 4 = 4\n",
        "1 x 5 = 5"
      ],
      "metadata": {
        "id": "66E9Z5yb7AWR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "numero = int(input(\"Ingrese un numero del 1 al 10: \"))\n",
        "for n in range(10):\n",
        "    print(numero ,\"X\", n+1 ,\"=\", numero * (n+1))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h3SggQQ87bYh",
        "outputId": "eadee2b2-e3c5-4dbc-f460-c9693891ee7c"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese un numero del 1 al 10: 2\n",
            "2 X 1 = 2\n",
            "2 X 2 = 4\n",
            "2 X 3 = 6\n",
            "2 X 4 = 8\n",
            "2 X 5 = 10\n",
            "2 X 6 = 12\n",
            "2 X 7 = 14\n",
            "2 X 8 = 16\n",
            "2 X 9 = 18\n",
            "2 X 10 = 20\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "2.   En un partido de fútbol, se ofrece un descuento a los aficionados que depende del estrato y la edad. Si el estrato es 1 y su edad es menor a 18 el descuento será del 20% sobre el valor de la boleta. Si el estrato es 1 y el alumno tiene 18 o mas años, el descuento será del 15%. Si el estrato es 2 y la edad es menor a 18 años, el descuento será del 10% y si el estrato es 2 y la edad es 18 años o más, el descuento será del 5%. Determinar el total del dinero recaudado y descontado por las últimas N personas que ingresan al partido.\n",
        "\n"
      ],
      "metadata": {
        "id": "XasPKYWB7iCw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def calcular_descuento(estrato, edad, valor_boleta):\n",
        "  if estrato == 1:\n",
        "    if edad < 18:\n",
        "      return valor_boleta * 0.20\n",
        "    else:\n",
        "      return valor_boleta * 0.15\n",
        "  elif estrato == 2:\n",
        "    if edad < 18:\n",
        "      return valor_boleta * 0.10\n",
        "    else:\n",
        "      return valor_boleta * 0.05\n",
        "  else:\n",
        "    return 0\n",
        "\n",
        "def procesar_boletos(n):\n",
        "  recaudacion_total = 0\n",
        "  descuento_total = 0\n",
        "\n",
        "  for _ in range(n):\n",
        "    estrato = int(input(\"Ingrese el estrato de la persona (1 o 2): \"))\n",
        "    edad = int(input(\"Ingrese la edad de la persona: \"))\n",
        "    valor_boleta = float(input(\"Ingrese cuanto vale la boleta: \"))\n",
        "\n",
        "    descuento = calcular_descuento(estrato, edad, valor_boleta)\n",
        "    valor_pagado = valor_boleta - descuento\n",
        "\n",
        "    recaudacion_total += valor_pagado\n",
        "    descuento_total += descuento\n",
        "\n",
        "  return recaudacion_total, descuento_total\n",
        "\n",
        "n_personas = int(input(\"Ingrese la cantidad de personas: \"))\n",
        "recaudacion, descuento = procesar_boletos(n_personas)\n",
        "\n",
        "print(f\"\\nRecaudación total: {recaudacion}\")\n",
        "print(f\"Descuento total: {descuento}\")2\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KhIMHNpl7y5C",
        "outputId": "171f039f-d107-4101-cd9b-fa50d482dd59"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad de personas: 2\n",
            "Ingrese el estrato de la persona (1 o 2): 2\n",
            "Ingrese la edad de la ersona: 2\n",
            "Ingrese cuanto vale la boleta: 2\n",
            "Ingrese el estrato de la persona (1 o 2): 2\n",
            "Ingrese la edad de la ersona: 2\n",
            "Ingrese cuanto vale la boleta: 2\n",
            "\n",
            "Recaudación total: 3.6\n",
            "Descuento total: 0.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "3.   Leer un password de ingreso a un programa y mostrar el mensaje de bienvenida si es correcto. Mientras no lo sea, debe mostrar el mensaje de Password incorrecto. El programa debe terminar automáticamente al quinto intento fallido.\n",
        "\n"
      ],
      "metadata": {
        "id": "qkIMXSrt8CAo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "passwordcorrecta = \"JoSesiTO\"\n",
        "maximoIntentos = 5\n",
        "\n",
        "for attempt in range(1, maximoIntentos + 1):\n",
        "    password = input(\"Ingrese su Contraseña: \")\n",
        "    if password == passwordcorrecta:\n",
        "        print(\"Haz ingresado, felicitaciones!\")\n",
        "        break\n",
        "    else:\n",
        "        print(\"Contraseña incorrecta.\")\n",
        "        if attempt == maximoIntentos:\n",
        "            print(\"Límite de intentos alcanzado. El programa se cerrará.\")\n",
        "else:\n",
        "    print(\"Programa finalizado.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-k73I5t69Sca",
        "outputId": "fa09fd28-83cd-42ad-82d1-5cda5dd54b9c"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese su Contraseña: JoSesiTO\n",
            "Haz ingresado, felicitaciones!\n"
          ]
        }
      ]
    }
  ]
}